
/**
 *		1. 형식/문법
 *		2. 간단한 예제	=> 흐름	(동작 => 호출)
 *		3. 약간 응용	=> 확장 
 *		4. 기간이 지나면 감 => 2~3월 경쯤
 *
 *			=> 누적
 *		--------------------------------------
 *		데이터 저장
 *			= 변수 : 한개 데이터 저장
 *			= 배열 : 여러개를 연속적으로 저장	=> 인덱스 : 고정적 / 같은 데이터형
 *			= 클래스 : 여러개 데이터 저장 => 다른 데이터형	=> 동적 (new)
 *			---------------------- 메모리에 저장
 *			= 파일 => 종속 (파일과 파일의 연결이 어렵다)
 *			= RDBMS(오라클)
 *		사용자가 요청하면 => 처리
 *			= 연산자
 *			= 제어문
 *			------- 관련된 명령문(기능을 모아서 처리) 	=> 메서드
 *		사용자가 요청한 위치에 처리 결과 출력
 *			= 브라우저 출력(웹)
 *
 *		--------------------------------------
 *		일반자바 => 오라클 연결 자바 	=> 웹 연결 자바
 *		--------------------------------------
 *		| 통합 : 스프링
 *
 *					method(int a, int b, int c....)
 *					method(ind[] arr)
 *					method(int a, String b, double c....)
 *					method(A a)
 *		메서드 : 	=> 결과값(리턴형), 사용자 요청값 (매개변수)
 *					---------	-------------------
 *					1개만 가능		제한이 없다
 *								=> 매개변수를 많이 사용하면
 *									=> 묶어서 설정
 *					=> 자바/C	=> 1개만 사용
 *					return 값
 *						여러개 값이 있는 경우	: 배열/클래스
 *					=> 파이썬 => 여러개 가능
 *					return 값,값,값...
 *					변수,변수,변수=메서드
 *				=> 프로그램
 *					기본
 *						= 입력기능
 *						= 요청처리 기능	=> 세분화
 *						= 출력기능
 *						= 모든 메서드는 한개의 기능만 수행	=> 유지보수
 *							=> 결재창	=> 등록
 *						= 교통시스템
 *							사고 / 공사	=> 출력
 *							CCTV	=> 위도 / 경도	(opencv)
 *								  ----- 최적화 (속도, 사용자 편리성)
 *				=> 프로그램	=> 개발보다 유지보수에 초점
 *									  ------- 가독성, 재사용
 *							   메서드 변경 / 메서드 추가
 *							
 *		형식)
 *			[접근지정어]	[옵션]	리턴형	메서드명(매개변수)	=> 선언부 {구현부}
 *										------------- 사용자 요청한 값
 *										기능별 구분자
 *										=> 문법은 변수 식별자와 동일
 *										=> 약속	=> 메서드는 소문자
 *										=> 메서드명이 동일하면 안된다
 *										=> 기능	=> 처리가 다른 경우
 *										  --------------------	
 *										  같은 메서드명으로 사용 (오버로딩)
 *			---------	-----	---- 처리 결과값
 *								기본형, 배열,클래스
 *								=> 1개만 설정이 가능
 *
 *						변경이 없는 final
 *						선언만 abstract
 *						자동저장	=> 공유
 *						------ static
 *			default
 *			=> 같은 폴더에 존재
 *			--------- 패키지
 *
 *			메서드 경우의 수
 *			----------------------------------------------------------
 *				리턴형	매개변수
 *				O		O		String substring(int begin)
 *								String substirng(int begin, int end)
 *				O		X		String trim()
 *				X		O		void System.out.println(String s)
 *								----- 결과값이 없는 경우 	=> 메서드 자체 처리
 *								오라클 연결시에 insert/update/delete
 *				X		X		void System.out.println()
 *			----------------------------------------------------------
 *
 *			----------------------------------------------------------
 *
 *			----------------------------------------------------------
 *
 *			----------------------------------------------------------
 *
 *
 */
public class 메서드_1 {
	static void display()
	{
		int i=1;	// display{} 안에서만 사용이 가능
		System.out.println("i="+i);
		i++;
		// {} 이 종료가 되면 자동으로 메모리에서 사라진다. => 지역변수
	}
	public static void main(String[] args) {
		System.out.println("main start");
		display();	// 생성	-> 소멸
		display();	// 생성	-> 소멸
		display();	// 생성	-> 소멸
		display();	// 생성	-> 소멸
		display();	// 생성	-> 소멸
		System.out.println("main end");
	}
	
}
